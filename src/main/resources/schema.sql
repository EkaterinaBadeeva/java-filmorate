CREATE TABLE IF NOT EXISTS USERS (
    USER_ID SERIAL NOT NULL,
	EMAIL CHARACTER VARYING(255) NOT NULL,
	USER_LOGIN CHARACTER VARYING(40) NOT NULL,
	USER_NAME CHARACTER VARYING(40) NOT NULL,
	BIRTHDAY DATE NOT NULL,

	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS USERS_UNIQUE ON USERS (USER_ID);

CREATE TABLE IF NOT EXISTS GENRE (
    GENRE_ID SERIAL NOT NULL,
	GENRE_NAME CHARACTER VARYING(100) NOT NULL,

	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS GENRE_UNIQUE ON GENRE (GENRE_ID);

CREATE TABLE IF NOT EXISTS RATING (
    RATING_ID SERIAL NOT NULL,
	RATING_NAME CHARACTER VARYING(40) NOT NULL,

	CONSTRAINT RATING_PK PRIMARY KEY (RATING_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS RATING_UNIQUE ON RATING (RATING_ID);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID SERIAL NOT NULL,
	FILM_NAME CHARACTER VARYING(250) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INT NOT NULL,
	RATING_ID INT,

	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILM_GENRE_FK FOREIGN KEY (RATING_ID) REFERENCES RATING (RATING_ID )
);
CREATE UNIQUE INDEX IF NOT EXISTS USERS_UNIQUE ON FILMS (FILM_ID);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
    FILM_ID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRE (GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES (
    FILM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
    USER_ID INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);


